## .gitignore strategy
#
# Only keep ren-c project specific file exclusions in .gitignore
#
# For files created by... 
#
#   * Editors (for eg. Vim, Eclipse, etc) 
#   * Machines (Windows, Linux, OSX, etc)
#   * or any artifacts of your development environment
#
# then please keep these exclusions in a global .gitignore file which
# should not be commited into the ren-c repo.
#
# For more info please see "Create a global .gitignore" at:
#
#     https://help.github.com/articles/ignoring-files/
#
# Our recommended advice is to use a .gitignore_global file described
# in link.
#           
# Here is an example .gitignore_global used on OS X (Mac):
#     
#      ## Mac stuff
#      .DS_Store
#  
#      ## Vim stuff
#      *.un~
#      *.swp
#
# This is kept in the users home directory:  ~/.gitignore_global
#


#################
## REBOL R3
#################

make/makefile
make/r3*
make/objs/

# It can be convenient if you are doing multiple builds of the same Rebol
# codebase for different platforms to put them in separate make
# directories (such as make-win32 or make-osx-x64) so they don't erase
# each other's state
make-*

src/boot/boot-code.r
src/boot/host-init.r
src/boot/tmp-*

src/core/b-boot.c

src/include/ext-types.h
src/include/host-ext-*
src/include/host-init.h
src/include/host-lib.h
src/include/host-table.inc
src/include/reb-dialect.h
src/include/reb-evtypes.h
src/include/reb-lib-lib.h
src/include/reb-lib.h
src/include/reb-types.h
src/include/tmp-*

src/tools/reb-lib-doc.txt
src/reb-lib-doc.txt

#################
## Eclipse
#################

*.pydevproject
.project
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.classpath
.settings/
.loadpath

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# CDT-specific
.cproject

# PDT-specific
.buildpath


#################
## Visual Studio
#################

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.sln.docstates

# Build results
[Dd]ebug/
[Rr]elease/
*_i.c
*_p.c
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.vspscc
.builds
*.dotCover

## TODO: If you have NuGet Package Restore enabled, uncomment this
#packages/

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf

# Visual Studio profiler
*.psess
*.vsp

# ReSharper is a .NET coding add-in
_ReSharper*

# Installshield output folder
[Ee]xpress

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish

# Others
[Bb]in
[Oo]bj
sql
TestResults
*.Cache
ClientBin
stylecop.*
~$*
*.dbmdl
Generated_Code #added for RIA/Silverlight projects

# Backup & report files from converting an old project file to a newer
# Visual Studio version. Backup files are not needed, because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML



############
## Windows
############

# Windows image file caches
Thumbs.db

# Folder config file
Desktop.ini


#############
## Python
#############

*.py[co]

# Packages
*.egg
*.egg-info
dist
build
eggs
parts
bin
var
sdist
develop-eggs
.installed.cfg

# Installer logs
pip-log.txt

# Unit test / coverage reports
.coverage
.tox

#Translations
*.mo

#Mr Developer
.mr.developer.cfg
